RSpec.describe Nervos::TransactionSigner do
  let(:private_key) { "0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee" }

  context "test transfer" do
    let(:tx_hash) do
      {
        to: "8ff0f5b85fba9a6429e2e256880291774f8e224f",
        nonce: "e4f195c409fe47c58a624de37c730679",
        quota: 30000,
        valid_until_block: 1882078,
        data: "",
        value: "0x3e8",
        chain_id: 1,
        version: 0
      }
    end
    let(:content) { "0x0a780a28386666306635623835666261396136343239653265323536383830323931373734663865323234661220653466313935633430396665343763353861363234646533376337333036373918b0ea0120deef72322000000000000000000000000000000000000000000000000000000000000003e8380112410fc6ff3fe2c84d716c2b7ffa198c121440fd926c9c7b36ca1e952e2d42bab20d05b828c2ef792a6484a312ee6e41d3cca4ea32bbf893ca8fa39b93d267cfdd8401" }

    it "encode correct" do
      tx = Nervos::Transaction.new(tx_hash)
      result = Nervos::TransactionSigner.encode(transaction: tx, private_key: private_key)
      expect(result).to eq content
    end
  end

  context "with data" do
    let(:tx_hash) do
      {
        data: "6060604052341561000f57600080fd5b60d38061001d6000396000f3006060604052600436106049576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806360fe47b114604e5780636d4ce63c14606e575b600080fd5b3415605857600080fd5b606c60048080359060200190919050506094565b005b3415607857600080fd5b607e609e565b6040518082815260200191505060405180910390f35b8060008190555050565b600080549050905600a165627a7a723058202d9a0979adf6bf48461f24200e635bc19cd1786efbcfc0608eb1d76114d405860029",
        quota: 1_000_000,
        chain_id: 1,
        version: 0,
        valid_until_block: 999999,
        value: "0x0",
        nonce: "12345",
        # from: "0x46a23e25df9a0f6c18729dda9ad1af3b6a131160"
      }
    end
    let(:content) {"0x0aa6021205313233343518c0843d20bf843d2af0016060604052341561000f57600080fd5b60d38061001d6000396000f3006060604052600436106049576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806360fe47b114604e5780636d4ce63c14606e575b600080fd5b3415605857600080fd5b606c60048080359060200190919050506094565b005b3415607857600080fd5b607e609e565b6040518082815260200191505060405180910390f35b8060008190555050565b600080549050905600a165627a7a723058202d9a0979adf6bf48461f24200e635bc19cd1786efbcfc0608eb1d76114d4058600293220000000000000000000000000000000000000000000000000000000000000000038011241c7b51f2b634a2bb6acb0956a11f71889a88c4bbac2098b39bc3c5c0e151b45931217c0d1e30c1bec872e619273003098e453332c89690b0670fb02a35a53808e00"}

    it "encode correct" do
      tx = Nervos::Transaction.new(tx_hash)
      result = Nervos::TransactionSigner.encode(transaction: tx, private_key: private_key)
      expect(result).to eq content
    end
  end
end
